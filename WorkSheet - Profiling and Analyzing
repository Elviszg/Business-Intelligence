//Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 from id
ii. Hours = 1562 from business_id
iii. Category = 2643 from business_id
iv. Attribute = 1115 from business_id
v. Review =10000 from id
vi. Checkin = 493 from business_id
vii. Photo = 10000 from id
viii. Tip = 3979 from business_id
ix. User = 10000 from id
x. Friend = 11 from user_id
xi. Elite_years = 2780 from user_id

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	
3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	SQL code used to arrive at answer:
	
SELECT *
,count (*)
FROM user
GRoup by id, name, review_count, useful, yelping_since, funny, cool, fans, 
average_stars, compliment_profile, compliment_cute, compliment_list, 
compliment_note, compliment_plain, compliment_cool, compliment_funny, compliment_writer, compliment_photos
Having count (*) is null

4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
		
	ii. Table: Business, Column: Stars
	
		min:	1.0	max:	5.0	avg: 3.6549
		
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995	
5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
Select 
 business.city
, business.review_count
From review left join business on business.id = review.id
where business.city is not null
order by business.city DESC 

	Copy and Paste the Result Below:
+-------------+--------------+
| city        | review_count |
+-------------+--------------+
| Tempe       |            3 |
| Scarborough |            7 |
| Phoenix     |            5 |
| Phoenix     |            4 |
| Peoria      |            6 |
| Madison     |            7 |
| Macedonia   |            4 |
| Las Vegas   |          427 |
| Las Vegas   |            4 |
| Las Vegas   |           20 |
| Gastonia    |            8 |
| Champaign   |            4 |
| Brook Park  |            4 |
| Belmont     |            5 |
+-------------+--------------+
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

select 
 stars
, count(stars) 
from business
where city = 'Avon'
Group by stars









Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
+-------+--------------+
| stars | count(stars) |
+-------+--------------+
|   1.5 |            1 |
|   2.5 |            2 |
|   3.5 |            3 |
|   4.0 |            2 |
|   4.5 |            1 |
|   5.0 |            1 |
+-------+--------------+

ii. Beachwood

SQL code used to arrive at answer:

select 
 stars
, count(stars) 
from business
where city = 'Beachwood'
Group by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+--------------+
| stars | count(stars) |
+-------+--------------+
|   2.0 |            1 |
|   2.5 |            1 |
|   3.0 |            2 |
|   3.5 |            2 |
|   4.0 |            1 |
|   4.5 |            2 |
|   5.0 |            5 |
+-------+--------------+

7. Find the top 3 users based on their total number 
of reviews:
		
	SQL code used to arrive at answer:
SELECT 
NAME
, REVIEW_COUNT
FROM USER
ORDER BY REVIEW_COUNT DESC
LIMIT 0,3
	
	Copy and Paste the Result Below:
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

(Output limit exceeded, 25 of 9581 total rows shown)		

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
No, because correlate tables depends of the user’s information.
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:

	Love has 1780 rows and Hate 232 rows

	SQL code used to arrive at answer:

-- for love I used this one:
Select * 
, count (text)
from review
where text like '%love%'
group by text 

-- And fot Hate I Used this one:
Select * 
, count (text)
from review
where text like '%hate%'
group by text 
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
Select 
id
, name
, fans
From user
Order by fans DESC
Limit 0,10
	
	Copy and Paste the Result Below:
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+	
		
Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.


	
i. Do the two groups you chose to analyze have a different distribution of hours?

Yes. I choose City = Charlotte and Category = Restaurants
Hours for Big City Grill from 11 to 20 and Subway from 06 to 22 but saturdat change from 10 to 21 hours.



ii. Do the two groups you chose to analyze have a different number of reviews?
YES, BIG CITY GRILL 4 AND SUBWAY 7
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
Both are in the same City, but different locations, I knew by the postal code. Big City Grill has more stars tan Subway. Maybe location has more influx of customers.

SQL code used for analysis:

SELECT
BUSINESS.NAME
,BUSINESS.STARS
, CASE 
WHEN BUSINESS.STARS BETWEEN 2.0 AND 3.0 THEN 'Estrellas 1'
WHEN BUSINESS.STARS BETWEEN 4.0 AND 5.0 THEN 'Estrellas 2'
else 'Otro'
END NUEVARELACION
, BUSINESS.CITY
, CATEGORY.CATEGORY
, HOURS.HOURS
, BUSINESS.REVIEW_COUNT
, BUSINESS.POSTAL_CODE
FROM (BUSINESS INNER JOIN CATEGORY ON BUSINESS.ID =CATEGORY.BUSINESS_ID) 
INNER JOIN HOURS ON HOURS.BUSINESS_ID = BUSINESS.ID
--LEFT JOIN REVIEW ON  REVIEW.BUSINESS_ID = BUSINESS.ID )
WHERE CITY = 'Charlotte' AND CATEGORY.CATEGORY = 'Restaurants' 
ORDER BY name ASC

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
Businnes with less stars are closed
     
         
ii. Difference 2:
Business with less reviews are closed         
         
         
SQL code used for analysis:

SELECT is_open, AVG(stars), SUM(review_count)
FROM business
Group by is_open

	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                           
I wanted to know which are the last gain stars by Business’s, so I filtered the last year <= 6 years since today and I got the information of 103 business, I order stars by ASC and I search closed and opened business. When I filtered closed business the result is null and opened are 103 businnes. The Lower stars is for  Elegant Car Rental having 1.5 and the higher are 9 business.
                  
iii. Output of your finished dataset:
 
 +-------------------------------+-------------------+---------------------+---------+-----------------+
| NOMBRE_NEGOCIO                | ESTRELLAS_NEGOCIO | date                | is_open | Duracion_Review |
+-------------------------------+-------------------+---------------------+---------+-----------------+
| Vintage Pools                 |               5.0 | 2017-06-27 00:00:00 |       1 |               6 |
| Arbor Care Tree Service       |               5.0 | 2017-04-03 00:00:00 |       1 |               6 |
| Enroute Coffee and Tea House  |               5.0 | 2017-04-24 00:00:00 |       1 |               6 |
| Hair Now Salon                |               5.0 | 2017-03-05 00:00:00 |       1 |               6 |
| Club Pilates Chandler         |               5.0 | 2017-03-16 00:00:00 |       1 |               6 |
| LunchboxWax Scottsdale        |               5.0 | 2017-02-04 00:00:00 |       1 |               6 |
| D & D Discount Motorcycles    |               5.0 | 2017-05-25 00:00:00 |       1 |               6 |
| Discotech Nightlife Concierge |               5.0 | 2017-04-03 00:00:00 |       1 |               6 |
| Studio No 7                   |               5.0 | 2017-05-11 00:00:00 |       1 |               6 |
| Tokyo Cafe                    |               4.5 | 2017-01-08 00:00:00 |       1 |               6 |
| West Side Market              |               4.5 | 2017-03-10 00:00:00 |       1 |               6 |
| Oakmont Bakery                |               4.5 | 2017-06-12 00:00:00 |       1 |               6 |
| Integrity Auto Glass          |               4.5 | 2017-01-11 00:00:00 |       1 |               6 |
| Tea Space                     |               4.5 | 2017-06-19 00:00:00 |       1 |               6 |
| Fractured Prune Doughnuts     |               4.5 | 2017-02-11 00:00:00 |       1 |               6 |
| Coffee Pub                    |               4.5 | 2017-03-19 00:00:00 |       1 |               6 |
| Soda Bun Thai Food            |               4.5 | 2017-06-29 00:00:00 |       1 |               6 |
| Sakawa Cafe                   |               4.5 | 2017-01-21 00:00:00 |       1 |               6 |
| San Capella by Mark-Taylor    |               4.5 | 2017-02-10 00:00:00 |       1 |               6 |
| Slyman's Restaurant           |               4.5 | 2017-02-24 00:00:00 |       1 |               6 |
| Local Dish                    |               4.5 | 2017-02-20 00:00:00 |       1 |               6 |
| Katsuya                       |               4.5 | 2017-01-13 00:00:00 |       1 |               6 |
| Bixi                          |               4.0 | 2017-06-18 00:00:00 |       1 |               6 |
| The Hideaway Grill            |               4.0 | 2017-05-04 00:00:00 |       1 |               6 |
| Balance Hormone Center        |               4.0 | 2017-05-02 00:00:00 |       1 |               6 |
+-------------------------------+-------------------+---------------------+---------+-----------------+
(Output limit exceeded, 25 of 103 total rows shown)       
       
  
iv. Provide the SQL code you used to create your final dataset:

SELECT 
BUSINESS.NAME AS NOMBRE_NEGOCIO
, BUSINESS.STARS AS ESTRELLAS_NEGOCIO
, REVIEW.DATE
, BUSINESS.IS_OPEN
, date ('now') - Strftime ('%Y-%m-%d', review.date) AS Duracion_Review
FROM (BUSINESS INNER JOIN REVIEW ON BUSINESS.ID = REVIEW.BUSINESS_ID)
WHERE Duracion_Review <= 6 AND IS_OPEN = 1 
ORDER by ESTRELLAS_NEGOCIO DESC
